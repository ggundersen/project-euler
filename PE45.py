'''
DESCRIPTION:
Project Euler, problem 45
Gregory Gundersen, 01/29/2013

PROBLEM:
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	T_n = n*(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	P_n = n*(3n-1)/2	1, 5, 12, 22, 35, ...
Hexagonal	 	H_n = n*(2n-1)	 	1, 6, 15, 28, 45, ...

It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

SOLUTION:
1533776805
Behold, the power of hashing
Also, if hexagonal, is triangle, do not need to check both
'''

import time
import gmath as g

def main():

    pent, hexa, bound = {}, {}, 40755

    for i in range(1, 100000):
        p = g.get_pentagonal_number(i)
        h = g.get_hexagonal_number(i)
        pent[p] = p
        hexa[h] = h

    for p in pent:
        if hexa.get(p) and p > bound:
            return p

s = time.time()
print main()
print 'Time: ' + str(time.time() - s)
